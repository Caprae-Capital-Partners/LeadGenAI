# 1) Redirect all HTTP → HTTPS
server {
    listen 80;
    server_name capraeleadseekers.site api.capraeleadseekers.site;
    return 301 https://$host$request_uri;
}

# 2) Frontend: proxy capraeleadseekers.site → Amplify URL
server {
    listen 443 ssl http2;
    server_name capraeleadseekers.site;

    ssl_certificate     /etc/letsencrypt/live/capraeleadseekers.site/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/capraeleadseekers.site/privkey.pem;
    include             /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam         /etc/letsencrypt/ssl-dhparams.pem;

    location / {
        proxy_pass              https://main.d2fzqm2i2qb7f3.amplifyapp.com;
        proxy_ssl_server_name   on;
        proxy_set_header        Host   main.d2fzqm2i2qb7f3.amplifyapp.com;
        proxy_set_header        X-Real-IP         $remote_addr;
        proxy_set_header        X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header        X-Forwarded-Proto $scheme;
        proxy_set_header        Upgrade           $http_upgrade;
        proxy_set_header        Connection        "upgrade";
    }
}

# 3) APIs on api.capraeleadseekers.site
server {
    listen 443 ssl http2;
    server_name api.capraeleadseekers.site;

    ssl_certificate     /etc/letsencrypt/live/api.capraeleadseekers.site/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/api.capraeleadseekers.site/privkey.pem;
    include             /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam         /etc/letsencrypt/ssl-dhparams.pem;

    # Phase 2 Flask health-check
    location = /api/health {
        rewrite ^/api(/.*)$ $1 break;
        proxy_pass         http://backend:5050;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }

    # Phase 2 enrich endpoints
    location /api/ {
        proxy_pass         http://backend:5050;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }

    # Phase 1 scraper endpoints
    location /scraper/ {
        rewrite            ^/scraper(/.*)$ /api$1 break;
        proxy_pass         http://scraper:5050;
        proxy_set_header   Host              $host;
        proxy_set_header   X-Real-IP         $remote_addr;
        proxy_set_header   X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Proto $scheme;
    }
}
